[
    {
    	"display": "for",
        "completionItemKind": 15,
        "replacementLines": [
            "for $0 in $1 {",
            "    $2",
            "}"
        ]
    },
    {
    	"display": "test function",
        "completionItemKind": 15,
        "replacementLines": [
            "#[test]",
            "fn ${1:name}() {",
            "    ${2:unimplemented!();}",
            "}"
        ]
    },
    {
    	"display": "test module",
        "completionItemKind": 15,
        "replacementLines": [
            "#[cfg(test)]",
            "mod ${1:tests} {",
            "    $0",
            "}"
        ]
    },
    {
    	"display": "unimplemented",
        "completionItemKind": 3,
        "replacementLines": [
            "unimplemented!()"
        ]
    },
    {
    	"display": "unreachable",
        "completionItemKind": 3,
        "replacementLines": [
            "unreachable!()"
        ]
    },
    {
    	"display": "println",
        "completionItemKind": 3,
        "replacementLines": [
            "println!(\"$1\", $0)"
        ]
    },
    {
    	"display":  "macro_rules",
        "completionItemKind": 15,
        "replacementLines": [
            "macro_rules! $1 {",
            "    ($2) => {",
            "        $0",
            "    };",
            "}"
        ]
    },
    {
    	"display": "if let Option",
        "completionItemKind": 15,
        "replacementLines": [
            "if let Some(${1:foo}) = ${1:foo} {",
            "    ${0:${1:foo}.}",
            "}"
        ]
    },
    {
    	"display": "spawn",
        "completionItemKind": 15,
        "replacementLines": [
            "thread::spawn(move || {",
            "    $0",
            "});"
        ]
    }
]